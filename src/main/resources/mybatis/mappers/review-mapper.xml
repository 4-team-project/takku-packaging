<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.takku.project.mapper.ReviewMapper">

	<!-- 리뷰 등록 -->
	<insert id="insertReview"
		parameterType="com.takku.project.domain.ReviewDTO">
		<!-- 1. 먼저 시퀀스로 review_id 생성 -->
		<selectKey keyProperty="reviewId" resultType="int"
			order="BEFORE">
			SELECT takku_review_seq.NEXTVAL FROM dual
		</selectKey>
		<!-- 2. review_id 포함해서 insert -->
		INSERT INTO takku_review (
		review_id,
		user_id,
		product_id,
		rating,
		content,
		created_at
		) VALUES (
		#{reviewId},
		#{userId},
		#{productId},
		#{rating},
		#{content},
		SYSDATE
		)
	</insert>

	<!-- 리뷰 삭제 -->
	<delete id="deleteReview" parameterType="int">
		DELETE FROM takku_review
		WHERE review_id = #{reviewId}
	</delete>

	<!-- 리뷰 수정 -->
	<update id="updateReview" parameterType="ReviewDTO">
		UPDATE takku_review
		SET
		rating = #{rating},
		content = #{content}
		WHERE review_id = #{reviewId}
	</update>

	<!-- 상품 ID로 리뷰 보기 -->
	<select id="reviewByProductId" parameterType="int"
		resultType="ReviewDTO">
		SELECT r.*, u.nickname
		FROM takku_review r
		JOIN takku_user u ON
		r.user_id = u.user_id
		WHERE r.product_id = #{productId}
		ORDER BY
		r.created_at DESC
	</select>

	<!-- 유저 ID로 내 리뷰 조회 -->
	<select id="reviewByUserID" parameterType="int"
		resultType="ReviewDTO">
		SELECT *
		FROM takku_review
		WHERE user_id = #{userId}
		ORDER BY
		created_at DESC
	</select>

	<!-- [추가] 펀딩 ID로 평균 평점 조회 -->
	<select id="selectAvgRatingByFundingId" parameterType="int"
		resultType="double">
		SELECT ROUND(AVG(r.rating), 2)
		FROM takku_review r
		JOIN
		takku_product p ON r.product_id = p.product_id
		JOIN takku_funding f ON
		f.product_id = p.product_id
		WHERE f.funding_id = #{fundingId}
	</select>

	<!-- [추가] 펀딩 ID로 리뷰 개수 조회 -->
	<select id="selectReviewCountByFundingId" parameterType="int"
		resultType="int">
		SELECT COUNT(*)
		FROM takku_review r
		JOIN takku_product p ON
		r.product_id = p.product_id
		JOIN takku_funding f ON f.product_id =
		p.product_id
		WHERE f.funding_id = #{fundingId}
	</select>

	<!-- 페이징된 리뷰 조회 -->
	<select id="reviewByProductIdWithPaging" parameterType="map"
		resultType="ReviewDTO">
		SELECT * FROM (
		SELECT ROWNUM AS rn, r.*, u.nickname
		FROM (
		SELECT *
		FROM takku_review
		WHERE product_id = #{productId}
		ORDER BY created_at DESC
		) r
		JOIN takku_user u ON r.user_id = u.user_id
		WHERE ROWNUM &lt;= #{endRow}
		)
		WHERE rn &gt;= #{startRow}
	</select>

	<!-- 리뷰 총 개수 -->
	<select id="countByProductId" parameterType="int"
		resultType="int">
		SELECT COUNT(*) FROM takku_review WHERE product_id =
		#{productId}
	</select>
</mapper>
